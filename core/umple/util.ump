
namespace util;

class Util {
	singleton;
	
	depend java.util.Optional;

	public <T> boolean ensure(T quality) {
		return quality == null ? false
			: quality.getClass().equals(Boolean.class) 
			? ((Boolean) quality).booleanValue()
			: quality.getClass().equals(Optional.class) 
			? ((Optional<?>) quality).isPresent() 
			: true;
	}
}

class Lists {
	singleton;
	
	depend java.util.ArrayList;

	public static <T> ArrayList<T> newArrayList() {
		return new ArrayList<T>();
	}
}

class Sets {
	singleton;
	
	depend java.util.HashSet;

	public static <T> HashSet<T> newHashSet() {
		return new HashSet<T>();
	}
}